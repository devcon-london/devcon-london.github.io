{"version":3,"sources":["components/notification/SnackBar.jsx","constants.js","state/actions/types.js","components/navigation/Authentication.jsx","state/actions/user.js","components/navigation/MainMenu.jsx","pages/home/Home.jsx","pages/terms/Terms.jsx","components/form/validation.js","components/form/InformedTextInput.jsx","components/form/MemberFields.jsx","components/form/AdvertiserFields.jsx","pages/subscribe/components/SubscriptionForm.jsx","pages/subscribe/Subscribe.jsx","pages/events/Events.jsx","pages/members/Members.jsx","pages/advertisers/Advertisers.jsx","pages/submissions/Submissions.jsx","components/navigation/Routes.jsx","components/navigation/MainNavigation.jsx","state/reducers/user.js","state/store.js","App.jsx","serviceWorker.js","index.js"],"names":["openSnackbarFn","SimpleSnackbar","state","open","message","openSnackBar","_this","setState","handleClose","event","reason","this","_this$state","classes","props","msg","react_default","a","createElement","id","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","aria-describedby","action","Button_default","key","color","size","onClick","IconButton_default","aria-label","className","close","Close_default","React","Component","openSnackbar","withStyles","theme","padding","spacing","unit","DBCollections","submissions","members","advertisers","rejects","roles","Sizes","NavItems","to","text","Errors","actionTypes","UserLoggedIn","UserLoggedOut","Authentication","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","authSuccess","result","assertThisInitialized","user","token","credential","accessToken","onLogin","authError","error","ghSignIn","auth","provider","window","firebase","GithubAuthProvider","addScope","signInWithPopup","then","catch","signOut","onAuthStateChanged","onLogout","displayName","Fragment","AuthenticationContainer","connect","dispatch","data","type","grow","flexGrow","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","concat","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","display","content","defineProperty","paddingLeft","paddingRight","breakpoints","down","devconLogo","backgroundImage","process","height","backgroundRepeat","withTheme","_ref","drawerOpen","handleDrawer","AppBar_default","classNames","Toolbar_default","disableGutters","Typography_default","variant","Menu_default","ButtonBase_default","component","Link","navigation_Authentication","Home","gutterBottom","Terms","Validation","validName","value","exec","undefined","validCompany","length","validRole","validBio","counter","diffMsg","validGithub","validTwitter","validLinkedIn","validEmail","InformedTextInput","handleChange","fieldApi","setValue","target","onChange","handleBlur","setTouched","onBlur","nextProps","nextState","fieldState","_this$props","field","rest","initialValue","forwardedRef","setFocus","children","InputProps","validate","objectWithoutProperties","TextField_default","assign","helperText","asField","MemberFields","esm","hidden","form_InformedTextInput","label","fullWidth","validateOnChange","multiline","rows","AdvertiserFields","db","SubscriptionForm","submitted","applicant","setFormApi","formApi","submitForm","formState","getState","touched","reduce","acc","cur","invalid","pristine","uid","Date","collection","doc","set","values","console","log","setApplicant","e","showForm","form_MemberFields","form_AdvertiserFields","getApi","onSubmit","FormControl_default","FormLabel_default","RadioGroup_default","name","FormControlLabel_default","control","Radio_default","Subscribe","loading","membership","submission","fetchUserMembership","get","fetchUserSubmission","retrieveData","exists","sub","subError","prevProps","react_router","subscribe_components_SubscriptionForm","SubscribeContainer","Events","Members","editing","updatedData","getUserForm","member","initialValues","getUserCard","editable","role","adminDate","bio","linkButton","href","github","linkedin","twitter","_this2","membersUnsubscribe","onSnapshot","snapshot","forEach","push","_this3","root","Grid_default","container","map","memberContent","item","xs","sm","Paper_default","paper","StyledMembers","MembersContainer","Advertisers","advertisersUnsubscribe","i","company","email","StyledAdvertisers","AdvertisersContainer","Submissions","approveSubmission","handleSubmission","dataset","rejectSubmission","getClickHandler","approval","adminUid","toISOString","delete","getFields","intro","referrer","date","submissionsUnsubscribe","v","data-uid","StyledSubmissions","SubmissionsContainer","Routes","path","exact","MainNavigation","handleDrawerOpen","handleDrawerClose","navigation_MainMenu","Drawer_default","drawer","anchor","drawerPaper","drawerHeader","direction","ChevronLeft_default","ChevronRight_default","Divider_default","List_default","ListItem_default","button","ListItemText_default","primary","contentShift","navigation_Routes","SnackBar","_content","flexShrink","objectSpread","alignItems","mixins","toolbar","justifyContent","overflow","paddingTop","emptyUser","photoURL","userObj","userReducer","arguments","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","appTheme","createMuiTheme","typography","useNextVariants","palette","App","es","react_router_dom","core_styles","CssBaseline_default","navigation_MainNavigation","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a3a55d2b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst styles = theme => ({\n  close: {\n    padding: theme.spacing.unit / 2,\n  },\n});\n\nlet openSnackbarFn;\n\nclass SimpleSnackbar extends React.Component {\n  state = {\n    open: false,\n    message: '',\n  };\n\n  componentDidMount() {\n    openSnackbarFn = this.openSnackBar;\n  }\n\n  openSnackBar = (message) => {\n    this.setState({\n      open: true,\n      message,\n    });\n  };\n\n  handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { open, message } = this.state;\n    const { classes } = this.props;\n    const msg = <span id=\"message-id\">{message}</span>;\n\n    return (\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={this.handleClose}\n        ContentProps={{\n          'aria-describedby': 'message-id',\n        }}\n        message={msg}\n        action={[\n          <Button key=\"close\" color=\"secondary\" size=\"small\" onClick={this.handleClose}>\n            CLOSE\n          </Button>,\n          <IconButton\n            key=\"close\"\n            aria-label=\"Close\"\n            color=\"inherit\"\n            className={classes.close}\n            onClick={this.handleClose}\n          >\n            <CloseIcon />\n          </IconButton>,\n        ]}\n      />\n    );\n  }\n}\n\nSimpleSnackbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport function openSnackbar(message) {\n  openSnackbarFn(message);\n}\n\nexport default withStyles(styles)(SimpleSnackbar);\n","export const DBCollections = {\n  submissions: 'submissions',\n  members: 'members',\n  advertisers: 'advertisers',\n  rejects: 'rejects',\n  roles: 'roles',\n};\n\nexport const Sizes = {\n  drawerWidth: 240,\n};\n\nexport const NavItems = [{\n  to: '/',\n  text: 'Home',\n}, {\n  to: '/terms',\n  text: 'Terms',\n}, {\n  to: '/subscribe',\n  text: 'Subscribe',\n}, {\n  to: '/members',\n  text: 'Members',\n}, {\n  to: '/advertisers',\n  text: 'Advertisers',\n}, {\n  to: '/submissions',\n  text: 'Submissions',\n}];\n\nexport const Errors = {\n  loginFirst: 'You need to login to access this section',\n  sectionPermission: 'You do not have enough rights to access this section',\n  notAMember: 'If you are looking for a community membership, you should apply first. Check the \"Subscribe\" section!',\n};\n","const actionTypes = {\n  UserLoggedIn: 'USER_LOGGED_IN',\n  UserLoggedOut: 'USER_LOGGED_OUT',\n};\n\nexport default actionTypes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\n\nimport { connect } from 'react-redux';\nimport { userLogout, userLogin } from '../../state/actions/user';\n\nclass Authentication extends React.Component {\n  constructor(props) {\n    super(props);\n    const { firebase } = window;\n    const { auth } = firebase;\n    this.auth = auth();\n  }\n\n  componentDidMount() {\n    const { auth, props } = this;\n    // firebase  auth\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        // User is signed in.\n        // console.log('+++ firebase +++ user signed in', user);\n        props.onLogin({ user });\n      } else {\n        // User signed out.\n        // console.log('+++ firebase +++ user not signed in');\n        props.onLogout();\n      }\n    });\n  }\n\n  authSuccess = (result) => {\n    const { props } = this;\n    // console.log('auth success', result);\n    const { user } = result;\n    // This gives you a GitHub Access Token. You can use it to access the GitHub API.\n    const token = result.credential.accessToken;\n    props.onLogin({ user, token });\n  }\n\n  authError = (error) => {\n    // Handle Errors here.\n    // var errorCode = error.code;\n    // var errorMessage = error.message;\n    // The email of the user's account used.\n    // var email = error.email;\n    // The firebase.auth.AuthCredential type that was used.\n    // var credential = error.credential;\n    // console.log('auth error', error);\n  }\n\n  ghSignIn = () => {\n    const { auth } = this;\n    const { firebase } = window;\n    const provider = new firebase.auth.GithubAuthProvider();\n    // https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/\n    provider.addScope('read:org');\n    auth\n      .signInWithPopup(provider)\n      .then(this.authSuccess)\n      .catch(this.authError);\n  }\n\n  signOut = () => {\n    this.auth.signOut();\n  }\n\n  render() {\n    const { user } = this.props;\n    const { displayName } = user;\n    return (\n      <React.Fragment>\n        { displayName\n          ? (\n            <Button\n              onClick={this.signOut}\n            >\n              SignOut\n            </Button>\n          ) : (\n            <Button\n              onClick={this.ghSignIn}\n            >\n              Github SignIn\n            </Button>\n          )\n        }\n      </React.Fragment>\n    );\n  }\n}\n\nAuthentication.propTypes = {\n  user: PropTypes.object.isRequired,\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n  };\n}\n\nfunction mapDispathToProps(dispatch) {\n  return {\n    onLogin: (user) => { dispatch(userLogin(user)); },\n    onLogout: () => { dispatch(userLogout()); },\n  };\n}\n\nconst AuthenticationContainer = connect(mapStateToProps, mapDispathToProps)(Authentication);\n\nexport default AuthenticationContainer;\n","import actionTypes from './types';\n\nexport function userLogin(data) {\n  return {\n    type: actionTypes.UserLoggedIn,\n    data,\n  };\n}\n\nexport function userLogout() {\n  return {\n    type: actionTypes.UserLoggedOut,\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport ToolBar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonBase from '@material-ui/core/ButtonBase';\n\nimport { Sizes } from '../../constants';\nimport Authentication from './Authentication';\n\nconst styles = theme => ({\n  grow: {\n    flexGrow: 1,\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${Sizes.drawerWidth}px)`,\n    marginLeft: Sizes.drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 0,\n    marginRight: 0,\n  },\n  hide: {\n    display: 'none',\n  },\n  content: {\n    paddingLeft: theme.spacing.unit * 10,\n    paddingRight: theme.spacing.unit * 10,\n    [theme.breakpoints.down('sm')]: {\n      paddingLeft: theme.spacing.unit * 3,\n      paddingRight: theme.spacing.unit * 3,\n    },\n  },\n  devconLogo: {\n    backgroundImage: `url('${process.env.PUBLIC_URL}/img/devcon.london.png')`,\n    width: '48px',\n    height: '48px',\n    backgroundRepeat: 'no-repeat',\n  },\n});\n\nconst MainMenu = ({ classes, drawerOpen, handleDrawer }) => (\n  <AppBar\n    color=\"default\"\n    className={classNames(classes.appBar, {\n      [classes.appBarShift]: drawerOpen,\n    })}\n  >\n    <ToolBar disableGutters={!drawerOpen} className={classes.content}>\n      <Typography\n        variant=\"h6\"\n        className={classes.grow}\n      >\n        <IconButton\n          aria-label=\"Open drawer\"\n          onClick={handleDrawer}\n          className={classNames(classes.menuButton, drawerOpen && classes.hide)}\n        >\n          <MenuIcon />\n        </IconButton>\n        <ButtonBase component={Link} to=\"/\">\n          <span className={classes.devconLogo} />\n        </ButtonBase>\n      </Typography>\n      <Authentication />\n    </ToolBar>\n  </AppBar>\n);\n\nMainMenu.propTypes = {\n  classes: PropTypes.object.isRequired,\n  drawerOpen: PropTypes.bool.isRequired,\n  handleDrawer: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(MainMenu);\n","import React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\n\nconst Home = () => (\n  <div>\n    <Typography variant=\"h2\" gutterBottom>\n      Welcome.\n    </Typography>\n\n    <Typography variant=\"h6\" gutterBottom>\n      Q: What is Devcon.London?\n    </Typography>\n    <Typography variant=\"body1\" gutterBottom>\n      A: Devcon.London is an invitation-only community of developers.\n    </Typography>\n    <Typography variant=\"h6\" gutterBottom>\n      Q: How do I get in?\n    </Typography>\n    <Typography variant=\"body1\" gutterBottom>\n      A: You should know someone who is already in and willing to invite you.\n    </Typography>\n    <Typography variant=\"h6\" gutterBottom>\n      Q: Why is this community so private?\n    </Typography>\n    <Typography variant=\"body1\" gutterBottom>\n      A: Because we believe that keeping strong relationships between our members is healthy\n      and granting access on an invite-basis is a way of doing so. Also, we can guarantee privacy\n      for our members and avoid unsolicited contacts from people who are not interested in the community.\n    </Typography>\n    <Typography variant=\"h6\" gutterBottom>\n      Q: OK, I have an invite, how do I get in now?\n    </Typography>\n    <Typography variant=\"body1\" gutterBottom>\n      A: Login using your Github account, then head to the subscribe page and fill the form.\n      One of the admins will review your submission and let you in.\n    </Typography>\n  </div>\n);\n\nexport default Home;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nconst Terms = () => (\n  <div>\n    <Typography variant=\"h4\" gutterBottom>\n      Privacy.\n    </Typography>\n    <p>\n      All data is stored on Firebase, and only authenticated users can access it.\n      Only members can see all other members' data.\n    </p>\n    <p>Also, we only use cookies for the Google Analytics tracker.</p>\n    <Typography variant=\"h4\" gutterBottom>\n      Code of conduct.\n    </Typography>\n    <p>\n      Please refer to the guidelines received when you joined the group.\n    </p>\n  </div>\n);\n\nexport default Terms;\n","const Validation = {\n  validName: (value) => {\n    const re = /[\\w]+[ ][\\w]+/;\n    return re.exec(value) ? undefined : 'enter a valid name + surname without special characters';\n  },\n  validCompany: (value) => {\n    const out = value && value.length > 2 ? undefined : 'at least 3 characters for a valid company name';\n    return out;\n  },\n  validRole: (value) => {\n    const out = value && value.length > 2 ? undefined : 'at least 3 characters for a valid role';\n    return out;\n  },\n  validBio: (value) => {\n    const minLength = 100;\n    const counter = value ? minLength - value.length : minLength;\n    const diffMsg = counter > 0 ? `(${counter} to go)` : '';\n    const msg = `at least 100 characters for a valid bio ${diffMsg}`;\n    return value && counter < 1 ? undefined : msg;\n  },\n  validGithub: (value) => {\n    const re = /https:\\/\\/github\\.com\\/[A-z0-9_-]+\\/?/;\n    return re.exec(value) ? undefined : 'valid Github url: https://github.com/username';\n  },\n  validTwitter: (value) => {\n    const re = /https:\\/\\/twitter\\.com\\/[A-z0-9_]+\\/?/;\n    return re.exec(value) ? undefined : 'valid Twitter url: https://twitter.com/username';\n  },\n  validLinkedIn: (value) => {\n    const re = /https:\\/\\/www\\.linkedin\\.com\\/in\\/[A-z0-9_-]+\\/?/;\n    return re.exec(value) ? undefined : 'valid LinkedIn url: https://www.linkedin.com/in/username';\n  },\n  validEmail: (value) => {\n    // found somewhere online\n    const re = /^([a-zA-Z0-9_\\-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\n    return re.exec(value) ? undefined : 'enter a valid email address';\n  },\n};\n\nexport default Validation;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { asField } from 'informed';\n\n/**\n * have a look at https://github.com/joepuzzo/informed/issues/114\n */\n\nclass InformedTextInput extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    const { props } = this;\n    if (\n      nextProps.fieldState === props.fieldState\n      && nextState === this.state\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  handleChange = (event) => {\n    const { props } = this;\n    props.fieldApi.setValue(event.target.value);\n    if (props.onChange) {\n      props.onChange(event);\n    }\n  };\n\n  handleBlur = (event) => {\n    const { props } = this;\n    props.fieldApi.setTouched(true);\n    if (props.onBlur) {\n      props.onBlur(event);\n    }\n  };\n\n  render() {\n    const {\n      field,\n      fieldState,\n      fieldApi,\n      onChange,\n      onBlur,\n      initialValue,\n      forwardedRef,\n      className,\n      setFocus,\n      children,\n      InputProps,\n      validate,\n      ...rest\n    } = this.props;\n\n    const { value, error } = fieldState;\n\n    return (\n      <TextField\n        {...rest}\n        value={!value && value !== 0 ? '' : value}\n        onChange={this.handleChange}\n        onBlur={this.handleBlur}\n        error={!!error}\n        helperText={error}\n      />\n    );\n  }\n}\n\nexport default asField(InformedTextInput);\n","import React from 'react';\nimport { Text } from 'informed';\nimport InformedTextInput from './InformedTextInput';\n\nimport Validation from './validation';\n\n\nconst MemberFields = () => (\n  <React.Fragment>\n    <Text field=\"uid\" id=\"uid\" hidden />\n    <InformedTextInput\n      field=\"name\"\n      id=\"name\"\n      label=\"Name\"\n      fullWidth\n      validateOnChange\n      validate={Validation.validName}\n    />\n    <InformedTextInput\n      field=\"github\"\n      id=\"github\"\n      label=\"Github URL\"\n      fullWidth\n      validateOnChange\n      validate={Validation.validGithub}\n    />\n    <InformedTextInput\n      field=\"twitter\"\n      id=\"twitter\"\n      label=\"Twitter URL\"\n      fullWidth\n      validateOnChange\n      validate={Validation.validTwitter}\n    />\n    <InformedTextInput\n      field=\"linkedin\"\n      id=\"linkedin\"\n      label=\"LinkedIn URL\"\n      fullWidth\n      validateOnChange\n      validate={Validation.validLinkedIn}\n    />\n    <InformedTextInput\n      field=\"email\"\n      id=\"email\"\n      label=\"Email\"\n      fullWidth\n      validateOnChange\n      validate={Validation.validEmail}\n    />\n    <InformedTextInput\n      field=\"role\"\n      id=\"role\"\n      label=\"Role\"\n      fullWidth\n      validateOnChange\n      validate={Validation.validRole}\n    />\n    <InformedTextInput\n      field=\"bio\"\n      id=\"bio\"\n      label=\"Short Bio\"\n      fullWidth\n      multiline\n      rows=\"4\"\n      validateOnChange\n      validate={Validation.validBio}\n    />\n  </React.Fragment>\n);\n\nexport default MemberFields;\n","import React from 'react';\nimport { Text } from 'informed';\nimport InformedTextInput from './InformedTextInput';\n\nimport Validation from './validation';\n\nconst AdvertiserFields = () => (\n  <React.Fragment>\n    <Text field=\"uid\" id=\"uid\" hidden />\n    <InformedTextInput\n      field=\"name\"\n      id=\"name\"\n      label=\"Name\"\n      fullWidth\n      validateOnChange\n      validate={Validation.validName}\n    />\n    <InformedTextInput\n      field=\"email\"\n      id=\"email\"\n      label=\"Email\"\n      fullWidth\n      validateOnChange\n      validate={Validation.validEmail}\n    />\n    <InformedTextInput\n      field=\"company\"\n      id=\"company\"\n      label=\"Company\"\n      fullWidth\n      validateOnChange\n      validate={Validation.validCompany}\n    />\n    <InformedTextInput\n      field=\"role\"\n      id=\"role\"\n      label=\"Role\"\n      fullWidth\n      validateOnChange\n      validate={Validation.validRole}\n    />\n    <InformedTextInput\n      field=\"linkedin\"\n      id=\"linkedin\"\n      label=\"LinkedIn URL\"\n      fullWidth\n      validateOnChange\n      validate={Validation.validLinkedIn}\n    />\n  </React.Fragment>\n);\n\nexport default AdvertiserFields;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { Form, Text } from 'informed';\nimport Validation from '../../../components/form/validation';\nimport InformedTextInput from '../../../components/form/InformedTextInput';\nimport MemberFields from '../../../components/form/MemberFields';\nimport AdvertiserFields from '../../../components/form/AdvertiserFields';\nimport { DBCollections } from '../../../constants';\nimport './SubscriptionForm.css';\n\nconst { db } = window;\n\nclass SubscriptionForm extends React.Component {\n  state = {\n    submitted: false,\n    applicant: DBCollections.members,\n  }\n\n  setFormApi = (formApi) => {\n    this.formApi = formApi;\n  }\n\n  submitForm = () => {\n    const formState = this.formApi.getState();\n    // require at least these fields common to both forms\n    const touched = ['referrer', 'name', 'role', 'email', 'linkedin'].reduce(\n      (acc, cur) => (acc && formState.touched[cur]),\n      true,\n    );\n    if (!formState.invalid && !formState.pristine && touched) {\n      const { user } = this.props;\n      const { applicant } = this.state;\n      // add values for hidden fields\n      this.formApi.setValue('uid', user.uid);\n      this.formApi.setValue('date', new Date());\n      // setting this value manually, informed would need workaround for radio with material-ui\n      this.formApi.setValue('applicant', applicant);\n      db.collection(DBCollections.submissions)\n        .doc(user.uid)\n        .set(formState.values)\n        .then(() => {\n          this.setState({ submitted: true });\n        })\n        .catch((error) => {\n          console.log('error writing submission', error);\n        });\n    }\n  }\n\n  setApplicant = e => this.setState({ applicant: e.target.value });\n\n  render() {\n    const { state } = this;\n    let content = null;\n\n    if (state.submitted) {\n      content = (<p>Thank you!</p>);\n    } else {\n      const showForm = {\n        members: <MemberFields />,\n        advertisers: <AdvertiserFields />,\n      };\n      content = (\n        <Form\n          className=\"SubscriptionForm\"\n          id=\"subscription-form\"\n          getApi={this.setFormApi}\n          onSubmit={this.submitForm}\n        >\n          <Text field=\"date\" id=\"date\" hidden />\n          {/* setting this value manually, informed would need workaround for radio with material-ui */}\n          <Text field=\"applicant\" id=\"applicant\" hidden />\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">Applicant Type</FormLabel>\n            <RadioGroup\n              aria-label=\"Applicant\"\n              name=\"applicant\"\n              value={state.applicant}\n              onChange={this.setApplicant}\n            >\n              <FormControlLabel\n                value={DBCollections.members}\n                control={<Radio />}\n                label=\"Member\"\n              />\n              <FormControlLabel\n                value={DBCollections.advertisers}\n                control={<Radio />}\n                label=\"Advertiser\"\n              />\n            </RadioGroup>\n          </FormControl>\n          <InformedTextInput\n            field=\"referrer\"\n            id=\"referrer\"\n            label=\"Introduced by (who told you about this)\"\n            fullWidth\n            validateOnChange\n            validate={Validation.validName}\n          />\n          {showForm[state.applicant]}\n          <Button onClick={this.submitForm}>Submit</Button>\n        </Form>\n      );\n    }\n    return content;\n  }\n}\n\nSubscriptionForm.propTypes = {\n  user: PropTypes.object.isRequired,\n};\n\nexport default SubscriptionForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Typography from '@material-ui/core/Typography';\n\nimport SubscriptionForm from './components/SubscriptionForm';\nimport { openSnackbar } from '../../components/notification/SnackBar';\nimport { DBCollections, Errors } from '../../constants';\n\nconst { db } = window;\n\nclass Subscribe extends React.Component {\n  state = {\n    loading: true,\n    membership: null,\n    submission: null,\n  }\n\n  componentDidMount() {\n    const { user } = this.props;\n    if (user.uid !== null) {\n      this.retrieveData(user.uid);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { user } = this.props;\n    if (user.uid !== prevProps.user.uid && user.uid !== null) {\n      this.retrieveData(user.uid);\n    }\n  }\n\n  fetchUserMembership = uid => db.collection(DBCollections.members).doc(uid).get();\n\n  fetchUserSubmission = uid => db.collection(DBCollections.submissions).doc(uid).get();\n\n  retrieveData = (uid) => {\n    this.setState({ loading: true });\n    this.fetchUserMembership(uid)\n      .then((doc) => {\n        if (doc.exists) {\n          // console.log('yoohoo you are a member!', doc.data());\n          this.setState({\n            loading: false,\n            membership: doc.data(),\n          });\n        }\n        // 'else' should not happen: if not a member it will throw due to permissions\n      })\n      .catch((error) => {\n        // console.log('error fetching membership', error);\n        // ok, you're not a member see if there's a pending submission\n        this.fetchUserSubmission(uid)\n          .then((sub) => {\n            if (sub.exists) {\n              // console.log('you have a pending submission', sub.data());\n              this.setState({\n                loading: false,\n                submission: sub.data(),\n              });\n            } else {\n              // TODO: mh, maybe permissons should be checked?\n              // this should not happen and go straight to error\n              // console.log('no pending submission');\n              this.setState({ loading: false });\n            }\n          })\n          .catch((subError) => {\n            // console.log('error fetching submission', subError);\n            this.setState({ loading: false });\n          });\n      });\n  }\n\n  render() {\n    const { user } = this.props;\n    const { membership, submission, loading } = this.state;\n    let content = null;\n\n    if (user.uid === null) {\n      // user not logged in\n      openSnackbar(Errors.loginFirst);\n      content = (<Redirect to=\"/\" />);\n    } else if (loading === true) {\n      content = (<p>loading...</p>);\n    } else if (membership === null) {\n      // logged in but no member, check if already submitted\n      if (submission === null) {\n        content = (<SubscriptionForm user={user} />);\n      } else {\n        content = (<p>You have a pending submission, good things come to those who wait.</p>);\n      }\n    } else {\n      content = (<p>You are already a Devcon member, do not need to subscribe again</p>);\n      // for debug, uncomment the following to always enable submissions\n      // content = (<SubscriptionForm user={user} />);\n    }\n\n    return (\n      <div>\n        <Typography variant=\"h4\" gutterBottom>\n          Subscribe.\n        </Typography>\n        {content}\n      </div>\n    );\n  }\n}\n\nSubscribe.propTypes = {\n  user: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({ user: state.user });\n\nconst SubscribeContainer = connect(mapStateToProps)(Subscribe);\nexport default SubscribeContainer;\n","import React from 'react';\n\nconst Events = () => (\n  <div>\n    <h1>Events</h1>\n    <p>accessible to members only</p>\n    <p>pull stuff from google calendar maybe?</p>\n  </div>\n);\n\nexport default Events;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nimport { Form } from 'informed';\nimport MemberFields from '../../components/form/MemberFields';\nimport { openSnackbar } from '../../components/notification/SnackBar';\nimport { DBCollections, Errors } from '../../constants';\n\nconst { db } = window;\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  linkButton: {\n    marginRight: '5px',\n  },\n  paper: {\n    padding: theme.spacing.unit * 2,\n  },\n});\n\n/**\n * this might be helpful for debug\nconst fakeMembers = () => (\n  [1, 2, 3, 4, 5, 6, 7, 8].map(v => ({\n    uid: v,\n    name: `Zungo ${v}`,\n    role: 'dev',\n    bio: 'crisps websites',\n    adminDate: (new Date()).toISOString(),\n    github: 'http://www.google.com/',\n    linkedin: 'http://www.google.com/',\n    twitter: 'http://www.google.com/',\n  }))\n);\n */\n\nclass Members extends React.Component {\n  state = {\n    members: [],\n    loading: true,\n    editing: false,\n    error: null,\n  }\n\n  componentDidMount() {\n    const { user } = this.props;\n    if (user.uid !== null) {\n      this.membersUnsubscribe = db.collection(DBCollections.members)\n        .onSnapshot(\n          (snapshot) => {\n            const members = [];\n            snapshot.forEach((doc) => {\n              members.push(doc.data());\n            });\n            this.setState({\n              members,\n              loading: false,\n              error: null,\n            });\n          },\n          (error) => {\n            this.setState({\n              members: [],\n              loading: false,\n              error: Errors.notAMember,\n            });\n          },\n        );\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.membersUnsubscribe) {\n      this.membersUnsubscribe();\n    }\n  }\n\n  setFormApi = (formApi) => {\n    this.formApi = formApi;\n  }\n\n  submitForm = () => {\n    const formState = this.formApi.getState();\n    if (!formState.invalid) {\n      db.collection(DBCollections.members)\n        .doc(formState.values.uid)\n        .get()\n        .then((doc) => {\n          const updatedData = Object.assign(\n            {},\n            doc.data(),\n            formState.values,\n          );\n          db.collection(DBCollections.members)\n            .doc(updatedData.uid)\n            .set(updatedData)\n            .then(() => {\n              this.setState({\n                error: null,\n                editing: false,\n              });\n            })\n            .catch((error) => {\n              this.setState({\n                error: 'Error storing data',\n                editing: false,\n              });\n            });\n        })\n        .catch((error) => {\n          this.setState({\n            error: 'Error fetching your personal data',\n            editing: false,\n          });\n        });\n    }\n  }\n\n  getUserForm = member => (\n    <Form\n      className=\"SubscriptionForm\"\n      id=\"subscription-form\"\n      getApi={this.setFormApi}\n      initialValues={member}\n      key={member.uid}\n    >\n      <MemberFields />\n      <Button onClick={this.submitForm}>Submit</Button>\n      <Button onClick={() => { this.setState({ editing: false }); }}>Cancel</Button>\n    </Form>\n  )\n\n  getUserCard = (member, editable, classes) => (\n    <React.Fragment>\n      <Typography variant=\"h5\">\n        {`${member.name}, ${member.role}`}\n      </Typography>\n      <Typography variant=\"body1\" gutterBottom>\n        {`member since ${member.adminDate}`}\n      </Typography>\n      <Typography variant=\"body1\" gutterBottom>\n        {member.bio}\n      </Typography>\n      <Typography variant=\"body1\">\n        { editable\n          ? (\n            <Button\n              className={classes.linkButton}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => this.setState({ editing: true })}\n            >\n              edit\n            </Button>\n          )\n          : ''\n        }\n        <Button className={classes.linkButton} variant=\"contained\" href={member.github}>Github</Button>\n        <Button className={classes.linkButton} variant=\"contained\" href={member.linkedin}>LinkedIn</Button>\n        <Button className={classes.linkButton} variant=\"contained\" href={member.twitter}>Twitter</Button>\n      </Typography>\n    </React.Fragment>\n  )\n\n  render() {\n    const { user, classes } = this.props;\n    const {\n      members,\n      loading,\n      editing,\n      error,\n    } = this.state;\n\n    let content = null;\n\n    if (user.uid === null) {\n      // user not logged in\n      openSnackbar(Errors.loginFirst);\n      content = (<Redirect to=\"/\" />);\n    } else if (loading) {\n      content = (<p>loading...</p>);\n    } else if (error !== null) {\n      content = (<p>{error}</p>);\n    } else if (members.length) {\n      content = (\n        <div className={classes.root}>\n          <Grid container spacing={24}>\n            {members.map((member) => {\n              let memberContent = null;\n              if (editing === true && member.uid === user.uid) {\n                memberContent = this.getUserForm(member);\n              } else {\n                const editable = member.uid === user.uid;\n                memberContent = this.getUserCard(member, editable, classes);\n              }\n\n              return (\n                <Grid item xs={12} sm={6} key={member.uid}>\n                  <Paper className={classes.paper}>\n                    {memberContent}\n                  </Paper>\n                </Grid>\n              );\n            })}\n          </Grid>\n        </div>\n      );\n    } else {\n      content = (<p>these are not the droids you are looking for!</p>);\n    }\n\n    return (\n      <div>\n        <Typography variant=\"h4\" gutterBottom>\n          Members.\n        </Typography>\n        {content}\n      </div>\n    );\n  }\n}\n\nMembers.propTypes = {\n  user: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({ user: state.user });\n\nconst StyledMembers = withStyles(styles)(Members);\nconst MembersContainer = connect(mapStateToProps)(StyledMembers);\n\nexport default MembersContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nimport { openSnackbar } from '../../components/notification/SnackBar';\nimport { DBCollections, Errors } from '../../constants';\n\nconst { db } = window;\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing.unit * 2,\n  },\n});\n\nclass Advertisers extends React.Component {\n  state = {\n    advertisers: [],\n    error: null,\n  }\n\n  componentDidMount() {\n    const { user } = this.props;\n    if (user.uid !== null) {\n      this.advertisersUnsubscribe = db.collection(DBCollections.advertisers)\n        .onSnapshot(\n          (snapshot) => {\n            const advertisers = [];\n            snapshot.forEach((doc) => {\n              advertisers.push(doc.data());\n            });\n            this.setState({ advertisers, error: null });\n          },\n          (error) => {\n            this.setState({\n              advertisers: [],\n              error: Errors.sectionPermission,\n            });\n          },\n        );\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.advertisersUnsubscribe) {\n      this.advertisersUnsubscribe();\n    }\n  }\n\n  render() {\n    const { user, classes } = this.props;\n    const { advertisers, error } = this.state;\n    let content = null;\n\n    if (user.uid === null) {\n      // user not logged in\n      openSnackbar(Errors.loginFirst);\n      content = (<Redirect to=\"/\" />);\n    } else if (advertisers.length) {\n      content = (\n        <div>\n          <Grid container spacing={24}>\n            {advertisers.map(i => (\n              <Grid item xs={12} sm={6} key={i.uid}>\n                <Paper className={classes.paper}>\n                  <Typography variant=\"h5\">\n                    {`${i.name}, ${i.role} at ${i.company}`}\n                  </Typography>\n                  <Typography variant=\"body1\">\n                    {`email: ${i.email}, joined ${i.adminDate}`}\n                  </Typography>\n                  <Button href={i.linkedin}>linkedin</Button>\n                </Paper>\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      );\n    } else if (error) {\n      content = (<p>{error}</p>);\n    } else {\n      content = (<p>nobody here...</p>);\n    }\n\n    return (\n      <div>\n        <Typography variant=\"h4\" gutterBottom>\n          Advertisers.\n        </Typography>\n        {content}\n      </div>\n    );\n  }\n}\n\nAdvertisers.propTypes = {\n  user: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({ user: state.user });\n\nconst StyledAdvertisers = withStyles(styles)(Advertisers);\nconst AdvertisersContainer = connect(mapStateToProps)(StyledAdvertisers);\n\nexport default AdvertisersContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport { openSnackbar } from '../../components/notification/SnackBar';\nimport { DBCollections, Errors } from '../../constants';\n\nconst { db } = window;\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  linkButton: {\n    marginRight: '5px',\n  },\n  paper: {\n    padding: theme.spacing.unit * 2,\n  },\n});\n\nclass Submissions extends React.Component {\n  state = {\n    submissions: [],\n    error: null,\n  }\n\n  componentDidMount() {\n    const { user } = this.props;\n    if (user.uid !== null) {\n      this.submissionsUnsubscribe = db.collection(DBCollections.submissions)\n        .onSnapshot(\n          (snapshot) => {\n            const submissions = [];\n            snapshot.forEach((doc) => {\n              submissions.push(doc.data());\n            });\n            this.setState({ submissions, error: null });\n          },\n          (error) => {\n            this.setState({\n              submissions: [],\n              error: Errors.sectionPermission,\n            });\n          },\n        );\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.submissionsUnsubscribe) {\n      this.submissionsUnsubscribe();\n    }\n  }\n\n  approveSubmission = (e) => {\n    this.handleSubmission(e.target.dataset.uid, true);\n  }\n\n  rejectSubmission = (e) => {\n    this.handleSubmission(e.target.dataset.uid, false);\n  }\n\n  getClickHandler = (uid, approval) => {\n    const f = () => this.handleSubmission(uid, approval);\n    return f;\n  }\n\n  handleSubmission = (uid, approval) => {\n    // console.log('handle', uid, 'approve', approval);\n    const { user } = this.props;\n    db.collection(DBCollections.submissions)\n      .doc(uid)\n      .get()\n      .then((doc) => {\n        // inject current user id and date so we know who approved/rejected\n        const data = Object.assign({\n          adminUid: user.uid,\n          adminDate: (new Date()).toISOString(),\n        }, doc.data());\n        let collection = DBCollections.rejects;\n        if (approval) {\n          // determine the right collection depending on applicant value\n          // can be either members or advertisers, set by SubcscriptionForm\n          collection = DBCollections[data.applicant];\n        }\n        db.collection(collection)\n          .doc(uid)\n          .set(data)\n          .then(() => {\n            db.collection(DBCollections.submissions)\n              .doc(uid)\n              .delete()\n              .then(() => {\n                // console.log('it is always sunny in California');\n                this.setState({ error: null });\n              })\n              .catch((error) => {\n                console.log('error deleting submission', error);\n                this.setState({ error: 'error deleting submission' });\n              });\n          })\n          .catch((error) => {\n            console.log('error setting submission', collection, error);\n            this.setState({ error: 'error setting submission' });\n          });\n      })\n      .catch((error) => {\n        console.log('error retrieving submission', uid, error);\n        this.setState({ error: 'error retrieving submission' });\n      });\n  }\n\n  getFields = (submission, classes) => {\n    const intro = (\n      <Typography variant=\"body1\" gutterBottom>\n        {`introduced by ${submission.referrer} on ${submission.date}`}\n      </Typography>\n    );\n    const showFields = {\n      members: (\n        <React.Fragment>\n          <Typography variant=\"h5\">\n            {`Community Membership for ${submission.name}, ${submission.role}`}\n          </Typography>\n          {intro}\n          <Typography variant=\"body1\" gutterBottom>\n            {`Bio: ${submission.bio}`}\n          </Typography>\n          <Typography variant=\"body1\" gutterBottom>\n            <Button className={classes.linkButton} variant=\"contained\" href={submission.github}>Github</Button>\n            <Button className={classes.linkButton} variant=\"contained\" href={`mailto:${submission.email}`}>Email</Button>\n            <Button className={classes.linkButton} variant=\"contained\" href={submission.linkedin}>LinkedIn</Button>\n            <Button className={classes.linkButton} variant=\"contained\" href={submission.twitter}>Twitter</Button>\n          </Typography>\n        </React.Fragment>\n      ),\n      advertisers: (\n        <React.Fragment>\n          <Typography variant=\"h5\">\n            {`Advertising Membership for ${submission.name}`}\n          </Typography>\n          {intro}\n          <Typography variant=\"body1\" gutterBottom>\n            {`Role ${submission.role}. Company: ${submission.company}`}\n          </Typography>\n          <Typography variant=\"body1\" gutterBottom>\n            <Button className={classes.linkButton} variant=\"contained\" href={submission.linkedin}>LinkedIn</Button>\n            <Button className={classes.linkButton} variant=\"contained\" href={`mailto:${submission.email}`}>Email</Button>\n          </Typography>\n        </React.Fragment>\n      ),\n    };\n    return showFields[submission.applicant];\n  }\n\n  render() {\n    const { user, classes } = this.props;\n    const { submissions, error } = this.state;\n    let content = null;\n\n    if (user.uid === null) {\n      // user not logged in\n      openSnackbar(Errors.loginFirst);\n      content = (<Redirect to=\"/\" />);\n    } else if (submissions.length) {\n      content = (\n        <div className={classes.root}>\n          <Grid container spacing={24}>\n            {submissions.map(i => (\n              <Grid item xs={12} sm={6} key={i.uid}>\n                <Paper className={classes.paper}>\n                  {this.getFields(i, classes)}\n                  {/* material-ui Button doesn't like data-* attributes, hence the getClickHandler */}\n                  {\n                    [\n                      { label: 'Accept', approval: true },\n                      { label: 'Reject', approval: false },\n                    ].map(v => (\n                      <Button\n                        className={classes.linkButton}\n                        variant=\"contained\"\n                        color={v.approval ? 'primary' : 'secondary'}\n                        key={v.label}\n                        data-uid={i.uid}\n                        onClick={this.getClickHandler(i.uid, v.approval)}\n                      >\n                        {v.label}\n                      </Button>\n                    ))\n                  }\n                </Paper>\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      );\n    } else if (error) {\n      content = (<p>{error}</p>);\n    } else {\n      content = (<p>no pending submissions!</p>);\n    }\n\n    return (\n      <div>\n        <Typography variant=\"h4\" gutterBottom>\n          Submissions.\n        </Typography>\n        {content}\n      </div>\n    );\n  }\n}\n\nSubmissions.propTypes = {\n  user: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({ user: state.user });\n\nconst StyledSubmissions = withStyles(styles)(Submissions);\nconst SubmissionsContainer = connect(mapStateToProps)(StyledSubmissions);\n\nexport default SubmissionsContainer;\n","import React from 'react';\n\nimport { Route } from 'react-router-dom';\n\nimport Home from '../../pages/home/Home';\nimport Terms from '../../pages/terms/Terms';\nimport Subscribe from '../../pages/subscribe/Subscribe';\nimport Events from '../../pages/events/Events';\nimport Members from '../../pages/members/Members';\nimport Advertisers from '../../pages/advertisers/Advertisers';\nimport Submissions from '../../pages/submissions/Submissions';\n\n\nconst Routes = () => (\n  <React.Fragment>\n    <Route path=\"/\" exact component={Home} />\n    <Route path=\"/terms\" component={Terms} />\n    {/* shown when not authenticated or authenticated and not a member */}\n    <Route path=\"/subscribe\" component={Subscribe} />\n    {/* shown when authenticated and member */}\n    <Route path=\"/events\" component={Events} />\n    <Route path=\"/members\" component={Members} />\n    <Route path=\"/advertisers\" component={Advertisers} />\n    {/* shown when authenticated, member and admin */}\n    <Route path=\"/submissions\" component={Submissions} />\n  </React.Fragment>\n);\n\nexport default Routes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport SnackBar from '../notification/SnackBar';\nimport { Sizes, NavItems } from '../../constants';\n\nimport MainMenu from './MainMenu';\nimport Routes from './Routes';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    width: Sizes.drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: Sizes.drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n    // I can't seem to change the color via mui theme, F# annoying\n    color: 'white',\n    paddingTop: '84px',\n    paddingLeft: theme.spacing.unit * 10,\n    paddingRight: theme.spacing.unit * 10,\n    [theme.breakpoints.down('sm')]: {\n      paddingLeft: theme.spacing.unit * 3,\n      paddingRight: theme.spacing.unit * 3,\n    },\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -Sizes.drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n});\n\nclass MainNavigation extends React.Component {\n  state = {\n    open: false,\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes, theme } = this.props;\n    const { open } = this.state;\n\n    return (\n      <div className={classes.root}>\n        <MainMenu drawerOpen={open} handleDrawer={this.handleDrawerOpen} />\n        {/* TMA: tried to move all this sh#t to a dedicated component but it breaks for unknown reasons */}\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={this.handleDrawerClose}>\n              {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n            </IconButton>\n          </div>\n          <Divider />\n          <List>\n            {NavItems.map(item => (\n              <ListItem\n                button\n                key={item.text}\n                component={Link}\n                onClick={() => { this.handleDrawerClose(); }}\n                to={item.to}\n              >\n                <ListItemText primary={item.text} />\n              </ListItem>\n            ))}\n          </List>\n        </Drawer>\n        <main\n          className={classNames(classes.content, {\n            [classes.contentShift]: open,\n          })}\n        >\n          <Routes />\n          <SnackBar />\n        </main>\n      </div>\n    );\n  }\n}\n\nMainNavigation.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(MainNavigation);\n","import actionTypes from '../actions/types';\n\nconst emptyUser = {\n  uid: null,\n  displayName: null,\n  photoURL: null,\n  token: null,\n  userObj: null,\n};\n\nconst userReducer = (state = emptyUser, action) => {\n  switch (action.type) {\n    case actionTypes.UserLoggedIn:\n      console.log('reducer user loggedin', action.data);\n      return Object.assign(\n        {},\n        {\n          uid: action.data.user.uid,\n          displayName: action.data.user.displayName,\n          photoURL: action.data.user.photoURL,\n          token: action.data.token,\n          userObj: action.data.user,\n        },\n      );\n\n    case actionTypes.UserLoggedOut:\n      return Object.assign(\n        {},\n        emptyUser,\n      );\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport userReducer from './reducers/user';\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n});\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport {\n  MuiThemeProvider,\n  createMuiTheme,\n} from '@material-ui/core/styles';\n\nimport MainNavigation from './components/navigation/MainNavigation';\n\nimport store from './state/store';\n\nimport './App.css';\n\nconst appTheme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n    type: 'dark',\n  },\n});\n\nconst App = () => (\n  <Provider store={store}>\n    <Router>\n      <MuiThemeProvider theme={appTheme}>\n        <CssBaseline />\n        <MainNavigation />\n      </MuiThemeProvider>\n    </Router>\n  </Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}