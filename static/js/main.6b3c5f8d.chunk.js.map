{"version":3,"sources":["constants.js","state/actions/types.js","components/navigation/Authentication.jsx","state/actions/user.js","components/navigation/MainMenu.jsx","pages/home/Home.jsx","pages/terms/Terms.jsx","components/form/validation.js","components/form/InformedTextInput.jsx","components/form/MemberFields.jsx","components/form/AdvertiserFields.jsx","pages/subscribe/components/SubscriptionForm.jsx","pages/subscribe/Subscribe.jsx","pages/events/Events.jsx","pages/members/Members.jsx","pages/advertisers/Advertisers.jsx","pages/submissions/Submissions.jsx","components/navigation/Routes.jsx","components/navigation/MainNavigation.jsx","state/reducers/user.js","state/store.js","App.jsx","serviceWorker.js","index.js"],"names":["DBCollections","submissions","members","advertisers","rejects","roles","Sizes","Errors","actionTypes","UserLoggedIn","UserLoggedOut","Authentication","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","authSuccess","result","assertThisInitialized","console","log","user","token","credential","accessToken","onLogin","authError","error","ghSignIn","auth","provider","window","firebase","GithubAuthProvider","addScope","signInWithPopup","then","catch","signOut","onAuthStateChanged","onLogout","displayName","react_default","a","createElement","Fragment","Button_default","onClick","React","Component","AuthenticationContainer","connect","state","dispatch","data","type","withStyles","theme","grow","flexGrow","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","concat","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","display","content","defineProperty","paddingLeft","spacing","unit","paddingRight","breakpoints","down","devconLogo","backgroundImage","process","height","backgroundRepeat","withTheme","_ref","classes","drawerOpen","handleDrawer","AppBar_default","color","className","classNames","Toolbar_default","disableGutters","Typography_default","variant","IconButton_default","aria-label","Menu_default","ButtonBase_default","component","Link","to","navigation_Authentication","Home","gutterBottom","Terms","Validation","validName","value","exec","undefined","validCompany","length","validRole","validBio","counter","diffMsg","msg","validGithub","validTwitter","validLinkedIn","validEmail","InformedTextInput","handleChange","event","fieldApi","setValue","target","onChange","handleBlur","setTouched","onBlur","nextProps","nextState","fieldState","_this$props","field","rest","initialValue","forwardedRef","setFocus","children","InputProps","validate","objectWithoutProperties","TextField_default","assign","helperText","asField","MemberFields","esm","id","hidden","form_InformedTextInput","label","fullWidth","validateOnChange","multiline","rows","AdvertiserFields","db","SubscriptionForm","submitted","applicant","setFormApi","formApi","submitForm","formState","getState","touched","reduce","acc","cur","invalid","pristine","uid","Date","collection","doc","set","values","setState","setApplicant","e","showForm","form_MemberFields","form_AdvertiserFields","getApi","onSubmit","FormControl_default","FormLabel_default","RadioGroup_default","name","FormControlLabel_default","control","Radio_default","Subscribe","loading","membership","submission","fetchUserMembership","get","fetchUserSubmission","retrieveData","exists","sub","subError","prevProps","_this$state","react_router","subscribe_components_SubscriptionForm","SubscribeContainer","Events","Members","editing","updatedData","getUserForm","member","initialValues","key","getUserCard","editable","role","adminDate","bio","linkButton","href","github","linkedin","twitter","_this2","membersUnsubscribe","onSnapshot","snapshot","forEach","push","_this3","root","Grid_default","container","map","memberContent","item","xs","sm","Paper_default","paper","StyledMembers","padding","MembersContainer","Advertisers","advertisersUnsubscribe","i","company","email","StyledAdvertisers","AdvertisersContainer","Submissions","approveSubmission","handleSubmission","dataset","rejectSubmission","getClickHandler","approval","adminUid","toISOString","delete","getFields","intro","referrer","date","submissionsUnsubscribe","v","data-uid","SubmissionsContainer","Routes","path","exact","MainNavigation","open","handleDrawerOpen","handleDrawerClose","navigation_MainMenu","Drawer_default","drawer","anchor","drawerPaper","drawerHeader","direction","ChevronLeft_default","ChevronRight_default","Divider_default","List_default","text","ListItem_default","button","ListItemText_default","primary","contentShift","navigation_Routes","_content","flexShrink","objectSpread","alignItems","mixins","toolbar","justifyContent","overflow","paddingTop","emptyUser","photoURL","userObj","userReducer","arguments","action","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","appTheme","createMuiTheme","typography","useNextVariants","palette","App","es","react_router_dom","core_styles","CssBaseline_default","navigation_MainNavigation","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6b3c5f8d.chunk.js","sourcesContent":["export const DBCollections = {\n  submissions: 'submissions',\n  members: 'members',\n  advertisers: 'advertisers',\n  rejects: 'rejects',\n  roles: 'roles',\n};\n\nexport const Sizes = {\n  drawerWidth: 240,\n};\n\nexport const Errors = {\n  sectionPermission: 'You do not have enough rights to access this section',\n};\n","const actionTypes = {\n  UserLoggedIn: 'USER_LOGGED_IN',\n  UserLoggedOut: 'USER_LOGGED_OUT',\n};\n\nexport default actionTypes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\n\nimport { connect } from 'react-redux';\nimport { userLogout, userLogin } from '../../state/actions/user';\n\nclass Authentication extends React.Component {\n  constructor(props) {\n    super(props);\n    const { firebase } = window;\n    const { auth } = firebase;\n    this.auth = auth();\n  }\n\n  componentDidMount() {\n    const { auth, props } = this;\n    // firebase  auth\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        // User is signed in.\n        // console.log('+++ firebase +++ user signed in', user);\n        props.onLogin({ user });\n      } else {\n        // User signed out.\n        // console.log('+++ firebase +++ user not signed in');\n        props.onLogout();\n      }\n    });\n  }\n\n  authSuccess = (result) => {\n    const { props } = this;\n    console.log('auth success', result);\n    const { user } = result;\n    // This gives you a GitHub Access Token. You can use it to access the GitHub API.\n    const token = result.credential.accessToken;\n    props.onLogin({ user, token });\n  }\n\n  authError = (error) => {\n    // Handle Errors here.\n    // var errorCode = error.code;\n    // var errorMessage = error.message;\n    // The email of the user's account used.\n    // var email = error.email;\n    // The firebase.auth.AuthCredential type that was used.\n    // var credential = error.credential;\n    console.log('auth error', error);\n  }\n\n  ghSignIn = () => {\n    const { auth } = this;\n    const { firebase } = window;\n    const provider = new firebase.auth.GithubAuthProvider();\n    // https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/\n    provider.addScope('read:org');\n    auth\n      .signInWithPopup(provider)\n      .then(this.authSuccess)\n      .catch(this.authError);\n  }\n\n  signOut = () => {\n    this.auth.signOut();\n  }\n\n  render() {\n    const { user } = this.props;\n    const { displayName } = user;\n    return (\n      <React.Fragment>\n        { displayName\n          ? (\n            <Button\n              onClick={this.signOut}\n            >\n              SignOut\n            </Button>\n          ) : (\n            <Button\n              onClick={this.ghSignIn}\n            >\n              Github SignIn\n            </Button>\n          )\n        }\n      </React.Fragment>\n    );\n  }\n}\n\nAuthentication.propTypes = {\n  user: PropTypes.object.isRequired,\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n  };\n}\n\nfunction mapDispathToProps(dispatch) {\n  return {\n    onLogin: (user) => { dispatch(userLogin(user)); },\n    onLogout: () => { dispatch(userLogout()); },\n  };\n}\n\nconst AuthenticationContainer = connect(mapStateToProps, mapDispathToProps)(Authentication);\n\nexport default AuthenticationContainer;\n","import actionTypes from './types';\n\nexport function userLogin(data) {\n  return {\n    type: actionTypes.UserLoggedIn,\n    data,\n  };\n}\n\nexport function userLogout() {\n  return {\n    type: actionTypes.UserLoggedOut,\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport ToolBar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonBase from '@material-ui/core/ButtonBase';\n\nimport { Sizes } from '../../constants';\nimport Authentication from './Authentication';\n\nconst styles = theme => ({\n  grow: {\n    flexGrow: 1,\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${Sizes.drawerWidth}px)`,\n    marginLeft: Sizes.drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 0,\n    marginRight: 0,\n  },\n  hide: {\n    display: 'none',\n  },\n  content: {\n    paddingLeft: theme.spacing.unit * 10,\n    paddingRight: theme.spacing.unit * 10,\n    [theme.breakpoints.down('sm')]: {\n      paddingLeft: theme.spacing.unit * 3,\n      paddingRight: theme.spacing.unit * 3,\n    },\n  },\n  devconLogo: {\n    backgroundImage: `url('${process.env.PUBLIC_URL}/img/devcon.london.png')`,\n    width: '48px',\n    height: '48px',\n    backgroundRepeat: 'no-repeat',\n  },\n});\n\nconst MainMenu = ({ classes, drawerOpen, handleDrawer }) => (\n  <AppBar\n    color=\"default\"\n    className={classNames(classes.appBar, {\n      [classes.appBarShift]: drawerOpen,\n    })}\n  >\n    <ToolBar disableGutters={!drawerOpen} className={classes.content}>\n      <Typography\n        variant=\"h6\"\n        className={classes.grow}\n      >\n        <IconButton\n          aria-label=\"Open drawer\"\n          onClick={handleDrawer}\n          className={classNames(classes.menuButton, drawerOpen && classes.hide)}\n        >\n          <MenuIcon />\n        </IconButton>\n        <ButtonBase component={Link} to=\"/\">\n          <span className={classes.devconLogo} />\n        </ButtonBase>\n      </Typography>\n      <Authentication />\n    </ToolBar>\n  </AppBar>\n);\n\nMainMenu.propTypes = {\n  classes: PropTypes.object.isRequired,\n  drawerOpen: PropTypes.bool.isRequired,\n  handleDrawer: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(MainMenu);\n","import React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\n\nconst Home = () => (\n  <div>\n    <Typography variant=\"h2\" gutterBottom>\n      Welcome.\n    </Typography>\n\n    <Typography variant=\"h6\" gutterBottom>\n      Q: What is Devcon.London?\n    </Typography>\n    <Typography variant=\"body1\" gutterBottom>\n      A: Devcon.London is an invitation-only community of developers.\n    </Typography>\n    <Typography variant=\"h6\" gutterBottom>\n      Q: How do I get in?\n    </Typography>\n    <Typography variant=\"body1\" gutterBottom>\n      A: You should know someone who is already in and willing to invite you.\n    </Typography>\n    <Typography variant=\"h6\" gutterBottom>\n      Q: Why is this community so private?\n    </Typography>\n    <Typography variant=\"body1\" gutterBottom>\n      A: Because we believe that keeping strong relationships between our members is healthy\n      and granting access on an invite-basis is a way of doing so. Also, we can guarantee privacy\n      for our members and avoid unsolicited contacts from people who are not interested in the community.\n    </Typography>\n    <Typography variant=\"h6\" gutterBottom>\n      Q: OK, I have an invite, how do I get in now?\n    </Typography>\n    <Typography variant=\"body1\" gutterBottom>\n      A: Login using your Github account, then head to the subscribe page and fill the form.\n      One of the admins will review your submission and let you in.\n    </Typography>\n  </div>\n);\n\nexport default Home;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nconst Terms = () => (\n  <div>\n    <Typography variant=\"h4\" gutterBottom>\n      Privacy.\n    </Typography>\n    <p>\n      All data is stored on Firebase, and only authenticated users can access it.\n      Only members can see all other members' data.\n    </p>\n    <p>Also, we only use cookies for the Google Analytics tracker.</p>\n    <Typography variant=\"h4\" gutterBottom>\n      Code of conduct.\n    </Typography>\n    <p>\n      Please refer to the guidelines received when you joined the group.\n    </p>\n  </div>\n);\n\nexport default Terms;\n","const Validation = {\n  validName: (value) => {\n    const re = /[\\w]+[ ][\\w]+/;\n    return re.exec(value) ? undefined : 'enter a valid name + surname without special characters';\n  },\n  validCompany: value => (value && value.length > 2 ? undefined : 'at least 3 characters for a valid company name'),\n  validRole: value => (value && value.length > 2 ? undefined : 'at least 3 characters for a valid role'),\n  validBio: (value) => {\n    const minLength = 100;\n    const counter = value ? minLength - value.length : minLength;\n    const diffMsg = counter > 0 ? `(${counter} to go)` : '';\n    const msg = `at least 100 characters for a valid bio ${diffMsg}`;\n    return value && counter < 1 ? undefined : msg;\n  },\n  validGithub: (value) => {\n    const re = /https:\\/\\/github\\.com\\/[A-z0-9_-]+\\//;\n    return re.exec(value) ? undefined : 'valid Github url: https://github.com/username/';\n  },\n  validTwitter: (value) => {\n    const re = /https:\\/\\/twitter\\.com\\/[A-z0-9_]+\\//;\n    return re.exec(value) ? undefined : 'valid Twitter url: https://twitter.com/username/';\n  },\n  validLinkedIn: (value) => {\n    const re = /https:\\/\\/www\\.linkedin\\.com\\/in\\/[A-z0-9_-]+\\//;\n    return re.exec(value) ? undefined : 'valid LinkedIn url: https://www.linkedin.com/in/username/';\n  },\n  validEmail: (value) => {\n    // found somewhere online\n    const re = /^([a-zA-Z0-9_\\-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\n    return re.exec(value) ? undefined : 'enter a valid email address';\n  },\n};\n\nexport default Validation;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { asField } from 'informed';\n\n/**\n * have a look at https://github.com/joepuzzo/informed/issues/114\n */\n\nclass InformedTextInput extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    const { props } = this;\n    if (\n      nextProps.fieldState === props.fieldState\n      && nextState === this.state\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  handleChange = (event) => {\n    const { props } = this;\n    props.fieldApi.setValue(event.target.value);\n    if (props.onChange) {\n      props.onChange(event);\n    }\n  };\n\n  handleBlur = (event) => {\n    const { props } = this;\n    props.fieldApi.setTouched(true);\n    if (props.onBlur) {\n      props.onBlur(event);\n    }\n  };\n\n  render() {\n    const {\n      field,\n      fieldState,\n      fieldApi,\n      onChange,\n      onBlur,\n      initialValue,\n      forwardedRef,\n      className,\n      setFocus,\n      children,\n      InputProps,\n      validate,\n      ...rest\n    } = this.props;\n\n    const { value, error } = fieldState;\n\n    return (\n      <TextField\n        {...rest}\n        value={!value && value !== 0 ? '' : value}\n        onChange={this.handleChange}\n        onBlur={this.handleBlur}\n        error={!!error}\n        helperText={error}\n      />\n    );\n  }\n}\n\nexport default asField(InformedTextInput);\n","import React from 'react';\nimport { Text } from 'informed';\nimport InformedTextInput from './InformedTextInput';\n\nimport Validation from './validation';\n\n\nconst MemberFields = () => (\n  <React.Fragment>\n    <Text field=\"uid\" id=\"uid\" hidden />\n    <InformedTextInput\n      field=\"name\"\n      id=\"name\"\n      label=\"Name\"\n      fullWidth\n      validateOnChange\n      validate={Validation.validName}\n    />\n    <InformedTextInput\n      field=\"github\"\n      id=\"github\"\n      label=\"Github URL\"\n      fullWidth\n      validateOnChange\n      validate={Validation.validGithub}\n    />\n    <InformedTextInput\n      field=\"twitter\"\n      id=\"twitter\"\n      label=\"Twitter URL\"\n      fullWidth\n      validateOnChange\n      validate={Validation.validTwitter}\n    />\n    <InformedTextInput\n      field=\"linkedin\"\n      id=\"linkedin\"\n      label=\"LinkedIn URL\"\n      fullWidth\n      validateOnChange\n      validate={Validation.validLinkedIn}\n    />\n    <InformedTextInput\n      field=\"email\"\n      id=\"email\"\n      label=\"Email\"\n      fullWidth\n      validateOnChange\n      validate={Validation.validEmail}\n    />\n    <InformedTextInput\n      field=\"role\"\n      id=\"role\"\n      label=\"Role\"\n      fullWidth\n      validateOnChange\n      validate={Validation.validRole}\n    />\n    <InformedTextInput\n      field=\"bio\"\n      id=\"bio\"\n      label=\"Short Bio\"\n      fullWidth\n      multiline\n      rows=\"4\"\n      validateOnChange\n      validate={Validation.validBio}\n    />\n  </React.Fragment>\n);\n\nexport default MemberFields;\n","import React from 'react';\nimport { Text } from 'informed';\nimport InformedTextInput from './InformedTextInput';\n\nimport Validation from './validation';\n\nconst AdvertiserFields = () => (\n  <React.Fragment>\n    <Text field=\"uid\" id=\"uid\" hidden />\n    <InformedTextInput\n      field=\"name\"\n      id=\"name\"\n      label=\"Name\"\n      fullWidth\n      validateOnChange\n      validate={Validation.validName}\n    />\n    <InformedTextInput\n      field=\"email\"\n      id=\"email\"\n      label=\"Email\"\n      fullWidth\n      validateOnChange\n      validate={Validation.validEmail}\n    />\n    <InformedTextInput\n      field=\"company\"\n      id=\"company\"\n      label=\"Company\"\n      fullWidth\n      validateOnChange\n      validate={Validation.validCompany}\n    />\n    <InformedTextInput\n      field=\"role\"\n      id=\"role\"\n      label=\"Role\"\n      fullWidth\n      validateOnChange\n      validate={Validation.validRole}\n    />\n    <InformedTextInput\n      field=\"linkedin\"\n      id=\"linkedin\"\n      label=\"LinkedIn URL\"\n      fullWidth\n      validateOnChange\n      validate={Validation.validLinkedIn}\n    />\n  </React.Fragment>\n);\n\nexport default AdvertiserFields;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { Form, Text } from 'informed';\nimport Validation from '../../../components/form/validation';\nimport InformedTextInput from '../../../components/form/InformedTextInput';\nimport MemberFields from '../../../components/form/MemberFields';\nimport AdvertiserFields from '../../../components/form/AdvertiserFields';\nimport { DBCollections } from '../../../constants';\nimport './SubscriptionForm.css';\n\nconst { db } = window;\n\nclass SubscriptionForm extends React.Component {\n  state = {\n    submitted: false,\n    applicant: DBCollections.members,\n  }\n\n  setFormApi = (formApi) => {\n    this.formApi = formApi;\n  }\n\n  submitForm = () => {\n    const formState = this.formApi.getState();\n    // require at least these fields common to both forms\n    const touched = ['referrer', 'name', 'role', 'email', 'linkedin'].reduce(\n      (acc, cur) => (acc && formState.touched[cur]),\n      true,\n    );\n    if (!formState.invalid && !formState.pristine && touched) {\n      const { user } = this.props;\n      const { applicant } = this.state;\n      // add values for hidden fields\n      this.formApi.setValue('uid', user.uid);\n      this.formApi.setValue('date', new Date());\n      // setting this value manually, informed would need workaround for radio with material-ui\n      this.formApi.setValue('applicant', applicant);\n      db.collection(DBCollections.submissions)\n        .doc(user.uid)\n        .set(formState.values)\n        .then(() => {\n          this.setState({ submitted: true });\n        })\n        .catch((error) => {\n          console.log('error writing submission', error);\n        });\n    }\n  }\n\n  setApplicant = e => this.setState({ applicant: e.target.value });\n\n  render() {\n    const { state } = this;\n    let content = null;\n\n    if (state.submitted) {\n      content = (<p>Thank you!</p>);\n    } else {\n      const showForm = {\n        members: <MemberFields />,\n        advertisers: <AdvertiserFields />,\n      };\n      content = (\n        <Form\n          className=\"SubscriptionForm\"\n          id=\"subscription-form\"\n          getApi={this.setFormApi}\n          onSubmit={this.submitForm}\n        >\n          <Text field=\"date\" id=\"date\" hidden />\n          {/* setting this value manually, informed would need workaround for radio with material-ui */}\n          <Text field=\"applicant\" id=\"applicant\" hidden />\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">Applicant Type</FormLabel>\n            <RadioGroup\n              aria-label=\"Applicant\"\n              name=\"applicant\"\n              value={state.applicant}\n              onChange={this.setApplicant}\n            >\n              <FormControlLabel\n                value={DBCollections.members}\n                control={<Radio />}\n                label=\"Member\"\n              />\n              <FormControlLabel\n                value={DBCollections.advertisers}\n                control={<Radio />}\n                label=\"Advertiser\"\n              />\n            </RadioGroup>\n          </FormControl>\n          <InformedTextInput\n            field=\"referrer\"\n            id=\"referrer\"\n            label=\"Introduced by (who told you about this)\"\n            fullWidth\n            validateOnChange\n            validate={Validation.validName}\n          />\n          {showForm[state.applicant]}\n          <Button onClick={this.submitForm}>Submit</Button>\n        </Form>\n      );\n    }\n    return content;\n  }\n}\n\nSubscriptionForm.propTypes = {\n  user: PropTypes.object.isRequired,\n};\n\nexport default SubscriptionForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Typography from '@material-ui/core/Typography';\n\nimport SubscriptionForm from './components/SubscriptionForm';\nimport { DBCollections } from '../../constants';\n\nconst { db } = window;\n\nclass Subscribe extends React.Component {\n  state = {\n    loading: true,\n    membership: null,\n    submission: null,\n  }\n\n  componentDidMount() {\n    const { user } = this.props;\n    if (user.uid !== null) {\n      this.retrieveData(user.uid);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { user } = this.props;\n    if (user.uid !== prevProps.user.uid && user.uid !== null) {\n      this.retrieveData(user.uid);\n    }\n  }\n\n  fetchUserMembership = uid => db.collection(DBCollections.members).doc(uid).get();\n\n  fetchUserSubmission = uid => db.collection(DBCollections.submissions).doc(uid).get();\n\n  retrieveData = (uid) => {\n    this.setState({ loading: true });\n    this.fetchUserMembership(uid)\n      .then((doc) => {\n        if (doc.exists) {\n          console.log('yoohoo you are a member!', doc.data());\n          this.setState({\n            loading: false,\n            membership: doc.data(),\n          });\n        }\n        // 'else' should not happen: if not a member it will throw due to permissions\n      })\n      .catch((error) => {\n        console.log('error fetching membership', error);\n        // ok, you're not a member see if there's a pending submission\n        this.fetchUserSubmission(uid)\n          .then((sub) => {\n            if (sub.exists) {\n              console.log('you have a pending submission', sub.data());\n              this.setState({\n                loading: false,\n                submission: sub.data(),\n              });\n            } else {\n              // TODO: mh, maybe permissons should be checked?\n              // this should not happen and go straight to error\n              console.log('no pending submission');\n              this.setState({ loading: false });\n            }\n          })\n          .catch((subError) => {\n            console.log('error fetching submission', subError);\n            this.setState({ loading: false });\n          });\n      });\n  }\n\n  render() {\n    const { user } = this.props;\n    const { membership, submission, loading } = this.state;\n    let content = null;\n\n    if (user.uid === null) {\n      // user not logged in\n      content = (<Redirect to=\"/\" />);\n    } else if (loading === true) {\n      content = (<p>loading...</p>);\n    } else if (membership === null) {\n      // logged in but no member, check if already submitted\n      if (submission === null) {\n        content = (<SubscriptionForm user={user} />);\n      } else {\n        content = (<p>You have a pending submission, good things come to those who wait.</p>);\n      }\n    } else {\n      content = (<p>You are already a Devcon member, do not need to subscribe again</p>);\n      // for debug, uncomment the following to always enable submissions\n      // content = (<SubscriptionForm user={user} />);\n    }\n\n    return (\n      <div>\n        <Typography variant=\"h4\" gutterBottom>\n          Subscribe.\n        </Typography>\n        {content}\n      </div>\n    );\n  }\n}\n\nSubscribe.propTypes = {\n  user: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({ user: state.user });\n\nconst SubscribeContainer = connect(mapStateToProps)(Subscribe);\nexport default SubscribeContainer;\n","import React from 'react';\n\nconst Events = () => (\n  <div>\n    <h1>Events</h1>\n    <p>accessible to members only</p>\n    <p>pull stuff from google calendar maybe?</p>\n  </div>\n);\n\nexport default Events;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nimport { Form } from 'informed';\nimport MemberFields from '../../components/form/MemberFields';\nimport { DBCollections, Errors } from '../../constants';\n\nconst { db } = window;\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  linkButton: {\n    marginRight: '5px',\n  },\n  paper: {\n    padding: theme.spacing.unit * 2,\n  },\n});\n\n/**\n * this might be helpful for debug\nconst fakeMembers = () => (\n  [1, 2, 3, 4, 5, 6, 7, 8].map(v => ({\n    uid: v,\n    name: `Zungo ${v}`,\n    role: 'dev',\n    bio: 'crisps websites',\n    adminDate: (new Date()).toISOString(),\n    github: 'http://www.google.com/',\n    linkedin: 'http://www.google.com/',\n    twitter: 'http://www.google.com/',\n  }))\n);\n */\n\nclass Members extends React.Component {\n  state = {\n    members: [],\n    loading: true,\n    editing: false,\n    error: null,\n  }\n\n  componentDidMount() {\n    const { user } = this.props;\n    if (user.uid !== null) {\n      this.membersUnsubscribe = db.collection(DBCollections.members)\n        .onSnapshot(\n          (snapshot) => {\n            const members = [];\n            snapshot.forEach((doc) => {\n              members.push(doc.data());\n            });\n            this.setState({\n              members,\n              loading: false,\n              error: null,\n            });\n          },\n          (error) => {\n            // console.log('error reading from live db', error);\n            this.setState({\n              members: [],\n              loading: false,\n              error: Errors.sectionPermission,\n            });\n          },\n        );\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.membersUnsubscribe) {\n      this.membersUnsubscribe();\n    }\n  }\n\n  setFormApi = (formApi) => {\n    this.formApi = formApi;\n  }\n\n  submitForm = () => {\n    const formState = this.formApi.getState();\n    if (!formState.invalid) {\n      db.collection(DBCollections.members)\n        .doc(formState.values.uid)\n        .get()\n        .then((doc) => {\n          const updatedData = Object.assign(\n            {},\n            doc.data(),\n            formState.values,\n          );\n          db.collection(DBCollections.members)\n            .doc(updatedData.uid)\n            .set(updatedData)\n            .then(() => {\n              // console.log('it is always sunny in California');\n              this.setState({\n                error: null,\n                editing: false,\n              });\n            })\n            .catch((error) => {\n              // console.log('error storing data', error);\n              this.setState({\n                error: 'Error storing data',\n                editing: false,\n              });\n            });\n        })\n        .catch((error) => {\n          // console.log('error fetching document', error);\n          this.setState({\n            error: 'Error fetching your personal data',\n            editing: false,\n          });\n        });\n    }\n  }\n\n  getUserForm = member => (\n    <Form\n      className=\"SubscriptionForm\"\n      id=\"subscription-form\"\n      getApi={this.setFormApi}\n      initialValues={member}\n      key={member.uid}\n    >\n      <MemberFields />\n      <Button onClick={this.submitForm}>Submit</Button>\n      <Button onClick={() => { this.setState({ editing: false }); }}>Cancel</Button>\n    </Form>\n  )\n\n  getUserCard = (member, editable, classes) => (\n    <div>\n      <Typography variant=\"h5\">\n        {`${member.name}, ${member.role}`}\n      </Typography>\n      <Typography variant=\"body1\" gutterBottom>\n        {`member since ${member.adminDate}`}\n      </Typography>\n      <Typography variant=\"body1\" gutterBottom>\n        {member.bio}\n      </Typography>\n      <Typography variant=\"body1\">\n        { editable\n          ? (\n            <Button\n              className={classes.linkButton}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => this.setState({ editing: true })}\n            >\n              edit\n            </Button>\n          )\n          : ''\n        }\n        <Button className={classes.linkButton} variant=\"contained\" href={member.github}>Github</Button>\n        <Button className={classes.linkButton} variant=\"contained\" href={member.linkedin}>LinkedIn</Button>\n        <Button className={classes.linkButton} variant=\"contained\" href={member.twitter}>Twitter</Button>\n      </Typography>\n    </div>\n  )\n\n  render() {\n    const { user, classes } = this.props;\n    const {\n      members,\n      loading,\n      editing,\n      error,\n    } = this.state;\n\n    let content = null;\n\n    if (user.uid === null) {\n      // user not logged in\n      content = (<Redirect to=\"/\" />);\n    } else if (loading) {\n      content = (<p>loading...</p>);\n    } else if (error !== null) {\n      content = (<p>{error}</p>);\n    } else if (members.length) {\n      content = (\n        <div className={classes.root}>\n          <Grid container spacing={24}>\n            {members.map((member) => {\n              let memberContent = null;\n              if (editing === true && member.uid === user.uid) {\n                memberContent = this.getUserForm(member);\n              } else {\n                const editable = member.uid === user.uid;\n                memberContent = this.getUserCard(member, editable, classes);\n              }\n\n              return (\n                <Grid item xs={12} sm={6} key={member.uid}>\n                  <Paper className={classes.paper}>\n                    {memberContent}\n                  </Paper>\n                </Grid>\n              );\n            })}\n          </Grid>\n        </div>\n      );\n    } else {\n      content = (<p>these are not the droids you are looking for!</p>);\n    }\n\n    return (\n      <div>\n        <Typography variant=\"h4\" gutterBottom>\n          Members.\n        </Typography>\n        {content}\n      </div>\n    );\n  }\n}\n\nMembers.propTypes = {\n  user: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({ user: state.user });\n\nconst StyledMembers = withStyles(styles)(Members);\nconst MembersContainer = connect(mapStateToProps)(StyledMembers);\n\nexport default MembersContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nimport { DBCollections, Errors } from '../../constants';\n\nconst { db } = window;\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing.unit * 2,\n  },\n});\n\nclass Advertisers extends React.Component {\n  state = {\n    advertisers: [],\n    error: null,\n  }\n\n  componentDidMount() {\n    const { user } = this.props;\n    if (user.uid !== null) {\n      this.advertisersUnsubscribe = db.collection(DBCollections.advertisers)\n        .onSnapshot(\n          (snapshot) => {\n            const advertisers = [];\n            snapshot.forEach((doc) => {\n              advertisers.push(doc.data());\n            });\n            this.setState({ advertisers, error: null });\n          },\n          (error) => {\n            this.setState({\n              advertisers: [],\n              error: Errors.sectionPermission,\n            });\n          },\n        );\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.advertisersUnsubscribe) {\n      this.advertisersUnsubscribe();\n    }\n  }\n\n  render() {\n    const { user, classes } = this.props;\n    const { advertisers, error } = this.state;\n    let content = null;\n\n    if (user.uid === null) {\n      // user not logged in\n      content = (<Redirect to=\"/\" />);\n    } else if (advertisers.length) {\n      content = (\n        <div>\n          <Grid container spacing={24}>\n            {advertisers.map(i => (\n              <Grid item xs={12} sm={6} key={i.uid}>\n                <Paper className={classes.paper}>\n                  <Typography variant=\"h5\">\n                    {`${i.name}, ${i.role} at ${i.company}`}\n                  </Typography>\n                  <Typography variant=\"body1\">\n                    {`email: ${i.email}, joined ${i.adminDate}`}\n                  </Typography>\n                  <Button href={i.linkedin}>linkedin</Button>\n                </Paper>\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      );\n    } else if (error) {\n      content = (<p>{error}</p>);\n    } else {\n      content = (<p>nobody here...</p>);\n    }\n\n    return (\n      <div>\n        <Typography variant=\"h4\" gutterBottom>\n          Advertisers.\n        </Typography>\n        {content}\n      </div>\n    );\n  }\n}\n\nAdvertisers.propTypes = {\n  user: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({ user: state.user });\n\nconst StyledAdvertisers = withStyles(styles)(Advertisers);\nconst AdvertisersContainer = connect(mapStateToProps)(StyledAdvertisers);\n\nexport default AdvertisersContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport { DBCollections, Errors } from '../../constants';\n\nconst { db } = window;\n\nclass Submissions extends React.Component {\n  state = {\n    submissions: [],\n    error: null,\n  }\n\n  componentDidMount() {\n    const { user } = this.props;\n    if (user.uid !== null) {\n      this.submissionsUnsubscribe = db.collection(DBCollections.submissions)\n        .onSnapshot(\n          (snapshot) => {\n            const submissions = [];\n            snapshot.forEach((doc) => {\n              submissions.push(doc.data());\n            });\n            this.setState({ submissions, error: null });\n          },\n          (error) => {\n            this.setState({\n              submissions: [],\n              error: Errors.sectionPermission,\n            });\n          },\n        );\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.submissionsUnsubscribe) {\n      this.submissionsUnsubscribe();\n    }\n  }\n\n  approveSubmission = (e) => {\n    this.handleSubmission(e.target.dataset.uid, true);\n  }\n\n  rejectSubmission = (e) => {\n    this.handleSubmission(e.target.dataset.uid, false);\n  }\n\n  getClickHandler = (uid, approval) => {\n    const f = () => this.handleSubmission(uid, approval);\n    return f;\n  }\n\n  handleSubmission = (uid, approval) => {\n    // console.log('handle', uid, 'approve', approval);\n    const { user } = this.props;\n    db.collection(DBCollections.submissions)\n      .doc(uid)\n      .get()\n      .then((doc) => {\n        // inject current user id and date so we know who approved/rejected\n        const data = Object.assign({\n          adminUid: user.uid,\n          adminDate: (new Date()).toISOString(),\n        }, doc.data());\n        let collection = DBCollections.rejects;\n        if (approval) {\n          // determine the right collection depending on applicant value\n          // can be either members or advertisers, set by SubcscriptionForm\n          collection = DBCollections[data.applicant];\n        }\n        db.collection(collection)\n          .doc(uid)\n          .set(data)\n          .then(() => {\n            db.collection(DBCollections.submissions)\n              .doc(uid)\n              .delete()\n              .then(() => {\n                // console.log('it is always sunny in California');\n                this.setState({ error: null });\n              })\n              .catch((error) => {\n                console.log('error deleting submission', error);\n                this.setState({ error: 'error deleting submission' });\n              });\n          })\n          .catch((error) => {\n            console.log('error setting submission', collection, error);\n            this.setState({ error: 'error setting submission' });\n          });\n      })\n      .catch((error) => {\n        console.log('error retrieving submission', uid, error);\n        this.setState({ error: 'error retrieving submission' });\n      });\n  }\n\n  getFields = (submission) => {\n    const intro = (\n      <Typography variant=\"body1\" gutterBottom>\n        {`introduced by ${submission.referrer} on ${submission.date}`}\n      </Typography>\n    );\n    const showFields = {\n      members: (\n        <React.Fragment>\n          <Typography variant=\"h5\">\n            {`Community Membership for ${submission.name}, ${submission.role}`}\n          </Typography>\n          {intro}\n          <Typography variant=\"body1\" gutterBottom>\n            {`Bio: ${submission.bio}`}\n          </Typography>\n          <Typography variant=\"body1\" gutterBottom>\n            <Button href={submission.github}>Github</Button>\n            <Button href={submission.linkedin}>LinkedIn</Button>\n            <Button href={submission.twitter}>Twitter</Button>\n          </Typography>\n        </React.Fragment>\n      ),\n      advertisers: (\n        <React.Fragment>\n          <Typography variant=\"h5\">\n            {`Advertising Membership for ${submission.name}`}\n          </Typography>\n          {intro}\n          <Typography variant=\"body1\" gutterBottom>\n            {`Role ${submission.role}. Company: ${submission.company}`}\n          </Typography>\n          <Typography variant=\"body1\" gutterBottom>\n            <Button href={submission.linkedin}>LinkedIn</Button>\n            <Button href={`mailto:${submission.email}`}>{submission.email}</Button>\n          </Typography>\n        </React.Fragment>\n      ),\n    };\n    return showFields[submission.applicant];\n  }\n\n  render() {\n    const { user } = this.props;\n    const { submissions, error } = this.state;\n    let content = null;\n\n    if (user.uid === null) {\n      // user not logged in\n      content = (<Redirect to=\"/\" />);\n    } else if (submissions.length) {\n      content = (\n        <div>\n          {submissions.map(i => (\n            <div key={i.uid}>\n              {this.getFields(i)}\n              {/* material-ui Button doesn't like data-* attributes, hence the getClickHandler */}\n              {\n                [\n                  { label: 'Accept', approval: true },\n                  { label: 'Reject', approval: false },\n                ].map(v => (\n                  <Button\n                    key={v.label}\n                    data-uid={i.uid}\n                    onClick={this.getClickHandler(i.uid, v.approval)}\n                  >\n                    {v.label}\n                  </Button>\n                ))\n              }\n            </div>\n          ))}\n        </div>\n      );\n    } else if (error) {\n      content = (<p>{error}</p>);\n    } else {\n      content = (<p>no pending submissions!</p>);\n    }\n\n    return (\n      <div>\n        <Typography variant=\"h4\" gutterBottom>\n          Submissions.\n        </Typography>\n        {content}\n      </div>\n    );\n  }\n}\n\nSubmissions.propTypes = {\n  user: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({ user: state.user });\n\nconst SubmissionsContainer = connect(mapStateToProps)(Submissions);\nexport default SubmissionsContainer;\n","import React from 'react';\n\nimport { Route } from 'react-router-dom';\n\nimport Home from '../../pages/home/Home';\nimport Terms from '../../pages/terms/Terms';\nimport Subscribe from '../../pages/subscribe/Subscribe';\nimport Events from '../../pages/events/Events';\nimport Members from '../../pages/members/Members';\nimport Advertisers from '../../pages/advertisers/Advertisers';\nimport Submissions from '../../pages/submissions/Submissions';\n\n\nconst Routes = () => (\n  <React.Fragment>\n    <Route path=\"/\" exact component={Home} />\n    <Route path=\"/terms\" component={Terms} />\n    {/* shown when not authenticated or authenticated and not a member */}\n    <Route path=\"/subscribe\" component={Subscribe} />\n    {/* shown when authenticated and member */}\n    <Route path=\"/events\" component={Events} />\n    <Route path=\"/members\" component={Members} />\n    <Route path=\"/advertisers\" component={Advertisers} />\n    {/* shown when authenticated, member and admin */}\n    <Route path=\"/submissions\" component={Submissions} />\n  </React.Fragment>\n);\n\nexport default Routes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Sizes } from '../../constants';\n\nimport MainMenu from './MainMenu';\nimport Routes from './Routes';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    width: Sizes.drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: Sizes.drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n    // I can't seem to change the color via mui theme, F# annoying\n    color: 'white',\n    paddingTop: '84px',\n    paddingLeft: theme.spacing.unit * 10,\n    paddingRight: theme.spacing.unit * 10,\n    [theme.breakpoints.down('sm')]: {\n      paddingLeft: theme.spacing.unit * 3,\n      paddingRight: theme.spacing.unit * 3,\n    },\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -Sizes.drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n});\n\nclass MainNavigation extends React.Component {\n  state = {\n    open: false,\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes, theme } = this.props;\n    const { open } = this.state;\n\n    return (\n      <div className={classes.root}>\n        <MainMenu drawerOpen={open} handleDrawer={this.handleDrawerOpen} />\n        {/* TMA: tried to move all this sh#t to a dedicated component but it breaks for unknown reasons */}\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={this.handleDrawerClose}>\n              {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n            </IconButton>\n          </div>\n          <Divider />\n          <List>\n            {[{\n              to: '/terms',\n              text: 'Terms',\n            }, {\n              to: '/subscribe',\n              text: 'Subscribe',\n            }, {\n              to: '/members',\n              text: 'Members',\n            }, {\n              to: '/advertisers',\n              text: 'Advertisers',\n            }, {\n              to: '/submissions',\n              text: 'Submissions',\n            }].map(item => (\n              <ListItem\n                button\n                key={item.text}\n                component={Link}\n                onClick={() => { this.handleDrawerClose(); }}\n                to={item.to}\n              >\n                <ListItemText primary={item.text} />\n              </ListItem>\n            ))}\n          </List>\n        </Drawer>\n        <main\n          className={classNames(classes.content, {\n            [classes.contentShift]: open,\n          })}\n        >\n          <Routes />\n        </main>\n      </div>\n    );\n  }\n}\n\nMainNavigation.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(MainNavigation);\n","import actionTypes from '../actions/types';\n\nconst emptyUser = {\n  uid: null,\n  displayName: null,\n  photoURL: null,\n  token: null,\n  userObj: null,\n};\n\nconst userReducer = (state = emptyUser, action) => {\n  switch (action.type) {\n    case actionTypes.UserLoggedIn:\n      console.log('reducer user loggedin', action.data);\n      return Object.assign(\n        {},\n        {\n          uid: action.data.user.uid,\n          displayName: action.data.user.displayName,\n          photoURL: action.data.user.photoURL,\n          token: action.data.token,\n          userObj: action.data.user,\n        },\n      );\n\n    case actionTypes.UserLoggedOut:\n      return Object.assign(\n        {},\n        emptyUser,\n      );\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport userReducer from './reducers/user';\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n});\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport {\n  MuiThemeProvider,\n  createMuiTheme,\n} from '@material-ui/core/styles';\n\nimport MainNavigation from './components/navigation/MainNavigation';\n\nimport store from './state/store';\n\nimport './App.css';\n\nconst appTheme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n    type: 'dark',\n  },\n});\n\nconst App = () => (\n  <Provider store={store}>\n    <Router>\n      <MuiThemeProvider theme={appTheme}>\n        <CssBaseline />\n        <MainNavigation />\n      </MuiThemeProvider>\n    </Router>\n  </Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}